apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "sistorage.fullname" . }}
  labels:
    {{- include "sistorage.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "sistorage.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "sistorage.selectorLabels" . | nindent 8 }}
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 12 }}
      volumes:
        - name: shared-data
          {{- if .Values.volumePath }}
          hostPath:
            path: '{{- toYaml .Values.volumePath }}'
            type: Directory
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: log
          {{- if .Values.logPath }}
          hostPath:
            path: '{{- toYaml .Values.logPath }}'
            type: Directory
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: nginx-log
          {{- if .Values.nginxLogPath }}
          hostPath:
            path: '{{- toYaml .Values.nginxLogPath }}'
            type: Directory
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: nginx-configmap
          configMap:
            name: {{ include "sistorage.fullname" . }}-nginx-configmap
            defaultMode: 0664
        - name: nginx-default-configmap
          configMap:
            name: {{ include "sistorage.fullname" . }}-nginx-default-configmap
            defaultMode: 0664
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          env:
            - name: DBPASSWORD
              valueFrom:
                secretKeyRef:
                  name: '{{ .Values.database.passwordKey }}'
                  key: '{{ .Values.database.passwordValue }}'
            - name: ConnectionStrings__SIStorage
              value: 'Host={{ .Values.database.host }};Username={{ .Values.database.user }};Password=$(DBPASSWORD);Database={{ .Values.database.name }}'
            - name: Serilog__MinimumLevel
              value: '{{ .Values.options.logLevel }}'
            - name: SIStorage__ContentFolder
              value: '/opt'
            - name: SIStorage__PackageUri
              value: '{{ .Values.options.packageUri }}'
            - name: SIStorage__LogoUri
              value: '{{ .Values.options.logoUri }}'
            - name: SIStorage__PublicUri
              value: '{{ .Values.options.publicUri }}'
            - name: SIStorage__ServeStaticFiles
              value: '{{ .Values.options.serveStaticFiles }}'
          volumeMounts:
          - name: shared-data
            mountPath: /opt
          - name: log
            mountPath: /app/logs
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        - name: nginx
          image: 'nginx:{{ .Values.image.nginxTag }}'
          volumeMounts:
          - name: shared-data
            mountPath: /usr/share/nginx/html
          - name: nginx-log
            mountPath: /var/log/nginx/
          - name: nginx-configmap
            mountPath: /etc/nginx/nginx.conf
            subPath: nginx.conf
          - name: nginx-default-configmap
            mountPath: /etc/nginx/conf.d/default.conf
            subPath: default.conf
          resources:
            {{- toYaml .Values.nginxResources | nindent 12 }}
          ports:
            - containerPort: 80
        - name: nginx-prometheus-exporter
          image: nginx/nginx-prometheus-exporter:{{ .Values.nginxPrometheusExporter.tag }}
          args:
            - '-nginx.scrape-uri=http://localhost/metrics'
          resources:
            limits:
              memory: 128Mi
              cpu: 500m
          ports:
            - containerPort: {{ .Values.nginxPrometheusExporter.port }}
